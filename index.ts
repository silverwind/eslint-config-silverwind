import comments from "@eslint-community/eslint-plugin-eslint-comments";
import stylistic from "@stylistic/eslint-plugin";
import arrayFunc from "eslint-plugin-array-func";
import importPlugin from "eslint-plugin-import-x";
import noUseExtendNative from "eslint-plugin-no-use-extend-native";
import regexp from "eslint-plugin-regexp";
import sonarjs from "eslint-plugin-sonarjs";
import unicorn from "eslint-plugin-unicorn";
import vitest from "@vitest/eslint-plugin";
import playwright from "eslint-plugin-playwright";
import globals from "globals";
import jsxA11y from "eslint-plugin-jsx-a11y-x";
import reactX from "eslint-plugin-react-x";
import reactDom from "eslint-plugin-react-dom";
import reactWebApi from "eslint-plugin-react-web-api";
import reactNamingConvention from "eslint-plugin-react-naming-convention";
import reactHooks from "eslint-plugin-react-hooks";
import reactRefresh from "eslint-plugin-react-refresh";
import validateJsxNesting from "eslint-plugin-validate-jsx-nesting";
import typescriptPlugin from "typescript-eslint";
import typescriptParser from "@typescript-eslint/parser";
// import storybook from "eslint-plugin-storybook";
import {defineConfig} from "eslint/config";

const jsExts = ["js", "jsx", "mjs", "cjs"] as const;
const tsExts = ["ts", "tsx", "mts", "cts"] as const;
const jsxExts = ["jsx", "tsx"] as const;
const otherExts = ["html", "vue", "md"] as const;

export default defineConfig([
  {
    ignores: [
      "**/!.storybook/",
      "**/*.snap",
      "**/.air/",
      "**/.git/",
      "**/.ruff_cache/",
      "**/.swc/",
      "**/.venv/",
      "**/build/",
      "**/dist/",
      "**/node_modules/",
      "**/persistent/",
      "**/vendor/",
    ],
  },
  {
    files: [`**/*.{${[...jsExts, ...tsExts].join(",")}}`],
    languageOptions: {
      ecmaVersion: "latest",
      sourceType: "module",
      globals: {
        ...globals.browser,
        ...globals.node,
      },
      parser: typescriptParser,
      parserOptions: {
        sourceType: "module",
        ecmaVersion: "latest",
        ecmaFeatures: {
          jsx: true,
          impliedStrict: true,
        },
        project: true,
        extraFileExtensions: otherExts.map(ext => `.${ext}`),
      },
    },
    linterOptions: {
      reportUnusedDisableDirectives: 2,
    },
    plugins: {
      "@eslint-community/eslint-comments": comments,
      "@stylistic": stylistic,
      "@typescript-eslint": typescriptPlugin.plugin,
      "array-func": arrayFunc,
      // @ts-expect-error
      "import-x": importPlugin,
      "no-use-extend-native": noUseExtendNative,
      "@eslint-react": reactX,
      "@eslint-react/dom": reactDom,
      "@eslint-react/web-api": reactWebApi,
      "@eslint-react/naming-convention": reactNamingConvention,
      "react-hooks": reactHooks,
      "react-refresh": reactRefresh,
      regexp,
      sonarjs,
      unicorn,
    },
    settings: {
      "import-x/extensions": [...jsExts, ...tsExts].map(ext => `.${ext}`),
      "import-x/parsers": {"@typescript-eslint/parser": [...jsExts, ...tsExts].map(ext => `.${ext}`)},
      "import-x/resolver": {"eslint-import-resolver-typescript": true},
      // eslint-react currently does not support this, maybe in the future it will
      // "linkComponents": [{name: "Link", linkAttribute: "href"}],
      "react-hooks": {"additionalEffectHooks": "^(useEffectOnce|useLayoutEffectOnce)$"}
    },
    rules: {
      "@eslint-community/eslint-comments/disable-enable-pair": [2, {"allowWholeFile": true}],
      "@eslint-community/eslint-comments/no-aggregating-enable": [2],
      "@eslint-community/eslint-comments/no-duplicate-disable": [2],
      "@eslint-community/eslint-comments/no-restricted-disable": [0],
      "@eslint-community/eslint-comments/no-unlimited-disable": [2],
      "@eslint-community/eslint-comments/no-unused-disable": [2],
      "@eslint-community/eslint-comments/no-unused-enable": [2],
      "@eslint-community/eslint-comments/no-use": [0],
      "@eslint-community/eslint-comments/require-description": [0],
      "@eslint-react/dom/no-dangerously-set-innerhtml": [0],
      "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": [2],
      "@eslint-react/dom/no-find-dom-node": [2],
      "@eslint-react/dom/no-flush-sync": [0],
      "@eslint-react/dom/no-hydrate": [0],
      "@eslint-react/dom/no-missing-button-type": [0],
      "@eslint-react/dom/no-missing-iframe-sandbox": [0],
      "@eslint-react/dom/no-namespace": [2],
      "@eslint-react/dom/no-render": [2],
      "@eslint-react/dom/no-render-return-value": [2],
      "@eslint-react/dom/no-script-url": [2],
      "@eslint-react/dom/no-string-style-prop": [2],
      "@eslint-react/dom/no-unknown-property": [2, {ignore: ["css"], requireDataLowercase: true}],
      "@eslint-react/dom/no-unsafe-iframe-sandbox": [0],
      "@eslint-react/dom/no-unsafe-target-blank": [0],
      "@eslint-react/dom/no-use-form-state": [0],
      "@eslint-react/dom/no-void-elements-with-children": [2],
      "@eslint-react/dom/prefer-namespace-import": [0],
      "@eslint-react/naming-convention/component-name": [0],
      "@eslint-react/naming-convention/context-name": [0],
      "@eslint-react/naming-convention/filename": [0],
      "@eslint-react/naming-convention/filename-extension": [0],
      "@eslint-react/naming-convention/use-state": [2],
      "@eslint-react/no-access-state-in-setstate": [0],
      "@eslint-react/no-array-index-key": [0],
      "@eslint-react/no-children-count": [0],
      "@eslint-react/no-children-for-each": [0],
      "@eslint-react/no-children-map": [0],
      "@eslint-react/no-children-only": [0],
      "@eslint-react/no-children-prop": [0],
      "@eslint-react/no-children-to-array": [0],
      "@eslint-react/no-class-component": [0],
      "@eslint-react/no-clone-element": [0],
      "@eslint-react/no-component-will-mount": [2],
      "@eslint-react/no-component-will-receive-props": [2],
      "@eslint-react/no-component-will-update": [2],
      "@eslint-react/no-context-provider": [0],
      "@eslint-react/no-create-ref": [2],
      "@eslint-react/no-default-props": [2],
      "@eslint-react/no-direct-mutation-state": [2],
      "@eslint-react/no-duplicate-key": [2],
      "@eslint-react/no-forbidden-props": [0],
      "@eslint-react/no-forward-ref": [2],
      "@eslint-react/no-implicit-key": [2],
      "@eslint-react/no-leaked-conditional-rendering": [0], // false-positives with ReactNode
      "@eslint-react/no-missing-component-display-name": [0],
      "@eslint-react/no-missing-context-display-name": [0],
      "@eslint-react/no-missing-key": [2],
      "@eslint-react/no-misused-capture-owner-stack": [0],
      "@eslint-react/no-nested-component-definitions": [0],
      "@eslint-react/no-nested-lazy-component-declarations": [0],
      "@eslint-react/no-prop-types": [2],
      "@eslint-react/no-redundant-should-component-update": [2],
      "@eslint-react/no-set-state-in-component-did-mount": [0],
      "@eslint-react/no-set-state-in-component-did-update": [0],
      "@eslint-react/no-set-state-in-component-will-update": [0],
      "@eslint-react/no-string-refs": [2],
      "@eslint-react/no-unnecessary-key": [2],
      "@eslint-react/no-unnecessary-use-callback": [2],
      "@eslint-react/no-unnecessary-use-memo": [2],
      "@eslint-react/no-unnecessary-use-prefix": [0],
      "@eslint-react/no-unsafe-component-will-mount": [0],
      "@eslint-react/no-unsafe-component-will-receive-props": [0],
      "@eslint-react/no-unsafe-component-will-update": [0],
      "@eslint-react/no-unstable-context-value": [2],
      "@eslint-react/no-unstable-default-props": [2],
      "@eslint-react/no-unused-class-component-members": [0], // false-positives
      "@eslint-react/no-unused-props": [2],
      "@eslint-react/no-unused-state": [2],
      "@eslint-react/no-use-context": [0],
      "@eslint-react/no-useless-forward-ref": [0],
      "@eslint-react/no-useless-fragment": [2, {allowExpressions: false}],
      "@eslint-react/prefer-destructuring-assignment": [0],
      "@eslint-react/prefer-namespace-import": [0],
      "@eslint-react/prefer-read-only-props": [0],
      "@eslint-react/prefer-use-state-lazy-initialization": [0],
      "@eslint-react/web-api/no-leaked-event-listener": [0], // too many false-positives
      "@eslint-react/web-api/no-leaked-interval": [0], // too many false-positives
      "@eslint-react/web-api/no-leaked-resize-observer": [0], // too many false-positives
      "@eslint-react/web-api/no-leaked-timeout": [0], // too many false-positives
      "@stylistic/array-bracket-newline": [0],
      "@stylistic/array-bracket-spacing": [2, "never"],
      "@stylistic/array-element-newline": [0],
      "@stylistic/arrow-parens": [0],
      "@stylistic/arrow-spacing": [2, {"before": true, "after": true}],
      "@stylistic/block-spacing": [0],
      "@stylistic/brace-style": [2, "1tbs", {"allowSingleLine": true}],
      "@stylistic/comma-dangle": [2, "only-multiline"],
      "@stylistic/comma-spacing": [2, {"before": false, "after": true}],
      "@stylistic/comma-style": [2, "last"],
      "@stylistic/computed-property-spacing": [2, "never"],
      "@stylistic/dot-location": [2, "property"],
      "@stylistic/eol-last": [2],
      "@stylistic/function-call-argument-newline": [0],
      "@stylistic/function-call-spacing": [2, "never"],
      "@stylistic/function-paren-newline": [0],
      "@stylistic/generator-star-spacing": [0],
      "@stylistic/implicit-arrow-linebreak": [0],
      "@stylistic/indent": [2, 2, {"ignoreComments": true, "SwitchCase": 1}],
      "@stylistic/jsx-child-element-spacing": [0],
      "@stylistic/jsx-closing-bracket-location": [0],
      "@stylistic/jsx-closing-tag-location": [2],
      "@stylistic/jsx-curly-brace-presence": [0],
      "@stylistic/jsx-curly-newline": [2, "consistent"],
      "@stylistic/jsx-curly-spacing": [2, {when: "never"}],
      "@stylistic/jsx-equals-spacing": [2, "never"],
      "@stylistic/jsx-first-prop-new-line": [0],
      "@stylistic/jsx-function-call-newline": [0],
      "@stylistic/jsx-indent-props": [2, 2],
      "@stylistic/jsx-max-props-per-line": [0],
      "@stylistic/jsx-newline": [0],
      "@stylistic/jsx-one-expression-per-line": [0],
      "@stylistic/jsx-pascal-case": [2, {allowAllCaps: true}],
      "@stylistic/jsx-self-closing-comp": [2],
      "@stylistic/jsx-sort-props": [0],
      "@stylistic/jsx-tag-spacing": [2, {beforeSelfClosing: "never", beforeClosing: "never"}],
      "@stylistic/jsx-wrap-multilines": [2],
      "@stylistic/key-spacing": [2],
      "@stylistic/keyword-spacing": [2],
      "@stylistic/line-comment-position": [0],
      "@stylistic/linebreak-style": [2, "unix"],
      "@stylistic/lines-around-comment": [0],
      "@stylistic/lines-between-class-members": [0],
      "@stylistic/max-len": [0],
      "@stylistic/max-statements-per-line": [0],
      "@stylistic/multiline-comment-style": [0],
      "@stylistic/multiline-ternary": [0],
      "@stylistic/new-parens": [2],
      "@stylistic/newline-per-chained-call": [0],
      "@stylistic/no-confusing-arrow": [0],
      "@stylistic/no-extra-parens": [0],
      "@stylistic/no-extra-semi": [2],
      "@stylistic/no-floating-decimal": [0],
      "@stylistic/no-mixed-operators": [0],
      "@stylistic/no-mixed-spaces-and-tabs": [2],
      "@stylistic/no-multi-spaces": [2, {"ignoreEOLComments": true, "exceptions": {"Property": true}}],
      "@stylistic/no-multiple-empty-lines": [2, {"max": 2, "maxEOF": 1, "maxBOF": 0}],
      "@stylistic/no-tabs": [0], // start if line is covered by indent
      "@stylistic/no-trailing-spaces": [2],
      "@stylistic/no-whitespace-before-property": [2],
      "@stylistic/nonblock-statement-body-position": [2],
      "@stylistic/object-curly-newline": [0],
      "@stylistic/object-curly-spacing": [2, "never"],
      "@stylistic/object-property-newline": [0],
      "@stylistic/one-var-declaration-per-line": [0],
      "@stylistic/operator-linebreak": [2, "after"],
      "@stylistic/padded-blocks": [2, "never"],
      "@stylistic/padding-line-between-statements": [0],
      "@stylistic/quote-props": [0],
      "@stylistic/quotes": [2, "double", {"avoidEscape": true, "allowTemplateLiterals": "always"}],
      "@stylistic/rest-spread-spacing": [2, "never"],
      "@stylistic/semi": [2, "always"],
      "@stylistic/semi-spacing": [2, {"before": false, "after": true}],
      "@stylistic/semi-style": [2, "last"],
      "@stylistic/space-before-blocks": [2, "always"],
      "@stylistic/space-before-function-paren": [0],
      "@stylistic/space-in-parens": [2, "never"],
      "@stylistic/space-infix-ops": [2],
      "@stylistic/space-unary-ops": [2],
      "@stylistic/spaced-comment": [0],
      "@stylistic/switch-colon-spacing": [2],
      "@stylistic/template-curly-spacing": [2, "never"],
      "@stylistic/template-tag-spacing": [2, "never"],
      "@stylistic/wrap-iife": [2, "inside"],
      "@stylistic/wrap-regex": [0],
      "@stylistic/yield-star-spacing": [2, "after"],
      "@typescript-eslint/adjacent-overload-signatures": [0],
      "@typescript-eslint/array-type": [0],
      "@typescript-eslint/await-thenable": [2],
      "@typescript-eslint/ban-ts-comment": [2, {"ts-expect-error": false, "ts-ignore": true, "ts-nocheck": false, "ts-check": false}],
      "@typescript-eslint/ban-tslint-comment": [0],
      "@typescript-eslint/class-literal-property-style": [0],
      "@typescript-eslint/class-methods-use-this": [0],
      "@typescript-eslint/consistent-generic-constructors": [0],
      "@typescript-eslint/consistent-indexed-object-style": [0],
      "@typescript-eslint/consistent-return": [0],
      "@typescript-eslint/consistent-type-assertions": [2, {assertionStyle: "as", objectLiteralTypeAssertions: "allow"}],
      "@typescript-eslint/consistent-type-definitions": [2, "type"],
      "@typescript-eslint/consistent-type-exports": [2, {fixMixedExportsWithInlineTypeSpecifier: false}],
      "@typescript-eslint/consistent-type-imports": [2, {prefer: "type-imports", fixStyle: "separate-type-imports", disallowTypeAnnotations: true}],
      "@typescript-eslint/default-param-last": [0],
      "@typescript-eslint/dot-notation": [0],
      "@typescript-eslint/explicit-function-return-type": [0],
      "@typescript-eslint/explicit-member-accessibility": [0],
      "@typescript-eslint/explicit-module-boundary-types": [0],
      "@typescript-eslint/init-declarations": [0],
      "@typescript-eslint/max-params": [0],
      "@typescript-eslint/member-ordering": [0],
      "@typescript-eslint/method-signature-style": [0],
      "@typescript-eslint/naming-convention": [0],
      "@typescript-eslint/no-array-constructor": [2],
      "@typescript-eslint/no-array-delete": [2],
      "@typescript-eslint/no-base-to-string": [0],
      "@typescript-eslint/no-confusing-non-null-assertion": [2],
      "@typescript-eslint/no-confusing-void-expression": [0],
      "@typescript-eslint/no-deprecated": [2],
      "@typescript-eslint/no-dupe-class-members": [0],
      "@typescript-eslint/no-duplicate-enum-values": [2],
      "@typescript-eslint/no-duplicate-type-constituents": [2, {ignoreUnions: true}],
      "@typescript-eslint/no-dynamic-delete": [0],
      "@typescript-eslint/no-empty-function": [0],
      "@typescript-eslint/no-empty-interface": [0],
      "@typescript-eslint/no-empty-object-type": [2],
      "@typescript-eslint/no-explicit-any": [0],
      "@typescript-eslint/no-extra-non-null-assertion": [2],
      "@typescript-eslint/no-extraneous-class": [0],
      "@typescript-eslint/no-floating-promises": [0],
      "@typescript-eslint/no-for-in-array": [2],
      "@typescript-eslint/no-implied-eval": [2],
      "@typescript-eslint/no-import-type-side-effects": [0], // dupe with consistent-type-imports
      "@typescript-eslint/no-inferrable-types": [0],
      "@typescript-eslint/no-invalid-this": [0],
      "@typescript-eslint/no-invalid-void-type": [0],
      "@typescript-eslint/no-loop-func": [0],
      "@typescript-eslint/no-magic-numbers": [0],
      "@typescript-eslint/no-meaningless-void-operator": [0],
      "@typescript-eslint/no-misused-new": [2],
      "@typescript-eslint/no-misused-promises": [2, {checksVoidReturn: {attributes: false, arguments: false}}],
      "@typescript-eslint/no-mixed-enums": [0],
      "@typescript-eslint/no-namespace": [2],
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": [0],
      "@typescript-eslint/no-non-null-asserted-optional-chain": [2],
      "@typescript-eslint/no-non-null-assertion": [0],
      "@typescript-eslint/no-redeclare": [0],
      "@typescript-eslint/no-redundant-type-constituents": [2],
      "@typescript-eslint/no-require-imports": [2],
      "@typescript-eslint/no-restricted-imports": [0],
      "@typescript-eslint/no-restricted-types": [0],
      "@typescript-eslint/no-shadow": [0],
      "@typescript-eslint/no-this-alias": [2],
      "@typescript-eslint/no-unnecessary-boolean-literal-compare": [0],
      "@typescript-eslint/no-unnecessary-condition": [0],
      "@typescript-eslint/no-unnecessary-parameter-property-assignment": [2],
      "@typescript-eslint/no-unnecessary-qualifier": [0],
      "@typescript-eslint/no-unnecessary-template-expression": [0],
      "@typescript-eslint/no-unnecessary-type-arguments": [0],
      "@typescript-eslint/no-unnecessary-type-assertion": [2], // previously had typesToIgnore: [HTMLElement, NodeListOf<HTMLElement>]
      "@typescript-eslint/no-unnecessary-type-constraint": [2],
      "@typescript-eslint/no-unnecessary-type-conversion": [0], // TODO: evaluate
      "@typescript-eslint/no-unsafe-argument": [0],
      "@typescript-eslint/no-unsafe-assignment": [0],
      "@typescript-eslint/no-unsafe-call": [0],
      "@typescript-eslint/no-unsafe-declaration-merging": [2],
      "@typescript-eslint/no-unsafe-enum-comparison": [2],
      "@typescript-eslint/no-unsafe-function-type": [0],
      "@typescript-eslint/no-unsafe-member-access": [0],
      "@typescript-eslint/no-unsafe-return": [0],
      "@typescript-eslint/no-unsafe-unary-minus": [2],
      "@typescript-eslint/no-unused-expressions": [0],
      "@typescript-eslint/no-unused-vars": [2, {vars: "all", args: "all", caughtErrors: "all", ignoreRestSiblings: false, argsIgnorePattern: "^_", varsIgnorePattern: "^_[^_]*$", caughtErrorsIgnorePattern: "^_", destructuredArrayIgnorePattern: "^_"}],
      "@typescript-eslint/no-use-before-define": [2, {"functions": false, "classes": true, "variables": true, "allowNamedExports": true, "typedefs": false, "enums": false, "ignoreTypeReferences": true}],
      "@typescript-eslint/no-useless-constructor": [0],
      "@typescript-eslint/no-useless-empty-export": [0],
      "@typescript-eslint/no-wrapper-object-types": [2],
      "@typescript-eslint/non-nullable-type-assertion-style": [0],
      "@typescript-eslint/only-throw-error": [2],
      "@typescript-eslint/parameter-properties": [0],
      "@typescript-eslint/prefer-as-const": [2],
      "@typescript-eslint/prefer-destructuring": [0],
      "@typescript-eslint/prefer-enum-initializers": [0],
      "@typescript-eslint/prefer-find": [2],
      "@typescript-eslint/prefer-for-of": [2],
      "@typescript-eslint/prefer-function-type": [2],
      "@typescript-eslint/prefer-includes": [2],
      "@typescript-eslint/prefer-literal-enum-member": [0],
      "@typescript-eslint/prefer-namespace-keyword": [0],
      "@typescript-eslint/prefer-nullish-coalescing": [0],
      "@typescript-eslint/prefer-optional-chain": [2, {requireNullish: true}],
      "@typescript-eslint/prefer-promise-reject-errors": [0],
      "@typescript-eslint/prefer-readonly": [0],
      "@typescript-eslint/prefer-readonly-parameter-types": [0],
      "@typescript-eslint/prefer-reduce-type-parameter": [0],
      "@typescript-eslint/prefer-regexp-exec": [0],
      "@typescript-eslint/prefer-return-this-type": [0],
      "@typescript-eslint/prefer-string-starts-ends-with": [2, {allowSingleElementEquality: "always"}],
      "@typescript-eslint/promise-function-async": [0],
      "@typescript-eslint/require-array-sort-compare": [0],
      "@typescript-eslint/require-await": [2],
      "@typescript-eslint/restrict-plus-operands": [2],
      "@typescript-eslint/restrict-template-expressions": [0],
      "@typescript-eslint/return-await": [0],
      "@typescript-eslint/strict-boolean-expressions": [0],
      "@typescript-eslint/switch-exhaustiveness-check": [0],
      "@typescript-eslint/triple-slash-reference": [2],
      "@typescript-eslint/typedef": [0],
      "@typescript-eslint/unbound-method": [0], // too many false-positives
      "@typescript-eslint/unified-signatures": [2],
      "accessor-pairs": [2],
      "array-callback-return": [2, {"checkForEach": true}],
      "array-func/avoid-reverse": [2],
      "array-func/from-map": [2],
      "array-func/no-unnecessary-this-arg": [2],
      "array-func/prefer-array-from": [2],
      "array-func/prefer-flat": [0],
      "array-func/prefer-flat-map": [0],
      "arrow-body-style": [0],
      "block-scoped-var": [2],
      "camelcase": [0],
      "capitalized-comments": [0],
      "class-methods-use-this": [0],
      "complexity": [0],
      "consistent-return": [0],
      "consistent-this": [0],
      "constructor-super": [2],
      "curly": [0],
      "default-case": [0],
      "default-case-last": [2],
      "default-param-last": [0],
      "dot-notation": [0],
      "eqeqeq": [2],
      "for-direction": [2],
      "func-name-matching": [2],
      "func-names": [0],
      "func-style": [0],
      "getter-return": [2],
      "grouped-accessor-pairs": [2],
      "guard-for-in": [0],
      "id-blacklist": [0],
      "id-denylist": [0],
      "id-length": [0],
      "id-match": [0],
      "import-x/consistent-type-specifier-style": [0],
      "import-x/default": [0], // has bugs, at least with monaco-editor package
      "import-x/dynamic-import-chunkname": [0],
      "import-x/export": [2],
      "import-x/exports-last": [0],
      "import-x/extensions": [2, "ignorePackages", {"checkTypeImports": true}],
      "import-x/first": [2],
      "import-x/group-exports": [0],
      "import-x/max-dependencies": [0],
      "import-x/named": [2],
      "import-x/namespace": [0],
      "import-x/newline-after-import": [0],
      "import-x/no-absolute-path": [2],
      "import-x/no-amd": [2],
      "import-x/no-anonymous-default-export": [0],
      "import-x/no-commonjs": [2, {"allowConditionalRequire": false}],
      "import-x/no-cycle": [2, {"ignoreExternal": true, "maxDepth": 1}], // disableScc is a massive speed gain for eslint-plugin-import
      "import-x/no-default-export": [0],
      "import-x/no-deprecated": [0], // handled by @typescript-eslint/no-deprecated
      "import-x/no-duplicates": [2],
      "import-x/no-dynamic-require": [0],
      "import-x/no-empty-named-blocks": [2],
      "import-x/no-extraneous-dependencies": [2],
      "import-x/no-import-module-exports": [0],
      "import-x/no-internal-modules": [0],
      "import-x/no-mutable-exports": [0],
      "import-x/no-named-as-default": [0],
      "import-x/no-named-as-default-member": [0],
      "import-x/no-named-default": [0],
      "import-x/no-named-export": [0],
      "import-x/no-namespace": [0],
      "import-x/no-nodejs-modules": [0],
      "import-x/no-relative-packages": [0],
      "import-x/no-relative-parent-imports": [0],
      "import-x/no-restricted-paths": [0],
      "import-x/no-self-import": [2],
      "import-x/no-unassigned-import": [0],
      "import-x/no-unresolved": [2, {"commonjs": true, "ignore": ["\\?.+$"]}],
      "import-x/no-unused-modules": [0, {"unusedExports": true, "ignoreUnusedTypeExports": true}],
      "import-x/no-useless-path-segments": [2, {"commonjs": true}],
      "import-x/no-webpack-loader-syntax": [2],
      "import-x/order": [0],
      "import-x/prefer-default-export": [0],
      "import-x/unambiguous": [0],
      "init-declarations": [0],
      "line-comment-position": [0],
      "logical-assignment-operators": [0],
      "max-classes-per-file": [0],
      "max-depth": [0],
      "max-lines": [0],
      "max-lines-per-function": [0],
      "max-nested-callbacks": [0],
      "max-params": [0],
      "max-statements": [0],
      "multiline-comment-style": [0],
      "new-cap": [0],
      "no-alert": [0],
      "no-array-constructor": [0],
      "no-async-promise-executor": [0],
      "no-await-in-loop": [0],
      "no-bitwise": [0],
      "no-buffer-constructor": [0],
      "no-caller": [2],
      "no-case-declarations": [2],
      "no-class-assign": [2],
      "no-compare-neg-zero": [2],
      "no-cond-assign": [2, "except-parens"],
      "no-console": [1, {"allow": ["debug", "info", "warn", "error"]}],
      "no-const-assign": [2],
      "no-constant-binary-expression": [2],
      "no-constant-condition": [0],
      "no-constructor-return": [2],
      "no-continue": [0],
      "no-control-regex": [0],
      "no-debugger": [1],
      "no-delete-var": [2],
      "no-div-regex": [0],
      "no-dupe-args": [2],
      "no-dupe-class-members": [2],
      "no-dupe-else-if": [2],
      "no-dupe-keys": [2],
      "no-duplicate-case": [2],
      "no-duplicate-imports": [0],
      "no-else-return": [0],
      "no-empty": [2, {"allowEmptyCatch": true}],
      "no-empty-character-class": [2],
      "no-empty-function": [0],
      "no-empty-pattern": [2],
      "no-empty-static-block": [2],
      "no-eq-null": [2],
      "no-eval": [2],
      "no-ex-assign": [2],
      "no-extend-native": [2],
      "no-extra-bind": [2],
      "no-extra-boolean-cast": [2],
      "no-extra-label": [0],
      "no-fallthrough": [2],
      "no-func-assign": [2],
      "no-global-assign": [2],
      "no-implicit-coercion": [2],
      "no-implicit-globals": [0],
      "no-implied-eval": [0],
      "no-import-assign": [2],
      "no-inline-comments": [0],
      "no-inner-declarations": [2],
      "no-invalid-regexp": [2],
      "no-invalid-this": [0],
      "no-irregular-whitespace": [2],
      "no-iterator": [2],
      "no-label-var": [2],
      "no-labels": [0],
      "no-lone-blocks": [2],
      "no-lonely-if": [0],
      "no-loop-func": [0],
      "no-loss-of-precision": [2],
      "no-magic-numbers": [0],
      "no-misleading-character-class": [2],
      "no-multi-assign": [0],
      "no-multi-str": [2],
      "no-negated-condition": [0],
      "no-nested-ternary": [0],
      "no-new": [0],
      "no-new-func": [0], // covered by @typescript-eslint/no-implied-eval
      "no-new-native-nonconstructor": [2],
      "no-new-symbol": [2],
      "no-new-wrappers": [2],
      "no-nonoctal-decimal-escape": [2],
      "no-obj-calls": [2],
      "no-object-constructor": [2],
      "no-octal": [2],
      "no-octal-escape": [2],
      "no-param-reassign": [0],
      "no-plusplus": [0],
      "no-promise-executor-return": [0],
      "no-proto": [2],
      "no-prototype-builtins": [2],
      "no-redeclare": [0],
      "no-regex-spaces": [2],
      "no-restricted-exports": [0],
      "no-restricted-globals": [2, "self"],
      "no-restricted-imports": [2, {paths: [{name: "punycode"}, {name: "assert"}, {name: "react", importNames: ["forwardRef"], message: "Use ref-as-prop instead - https://react.dev/blog/2024/12/05/react-19#ref-as-a-prop"}]}],
      "no-restricted-properties": [0],
      "no-restricted-syntax": [2, "WithStatement", "ForInStatement", "SequenceExpression"],
      "no-return-assign": [0],
      "no-script-url": [2],
      "no-self-assign": [2, {"props": true}],
      "no-self-compare": [2],
      "no-sequences": [2],
      "no-setter-return": [2],
      "no-shadow": [0],
      "no-shadow-restricted-names": [2],
      "no-sparse-arrays": [2],
      "no-template-curly-in-string": [2],
      "no-ternary": [0],
      "no-this-before-super": [2],
      "no-throw-literal": [2],
      "no-undef": [2, {"typeof": true}],
      "no-undef-init": [2],
      "no-undefined": [0],
      "no-underscore-dangle": [0],
      "no-unexpected-multiline": [2],
      "no-unmodified-loop-condition": [2],
      "no-unneeded-ternary": [0],
      "no-unreachable": [2],
      "no-unreachable-loop": [2],
      "no-unsafe-finally": [2],
      "no-unsafe-negation": [2],
      "no-unsafe-optional-chaining": [2],
      "no-unused-expressions": [2],
      "no-unused-labels": [2],
      "no-unused-private-class-members": [2],
      "no-unused-vars": [0],
      "no-use-before-define": [0],
      "no-use-extend-native/no-use-extend-native": [2],
      "no-useless-assignment": [0], // too many false-positives
      "no-useless-backreference": [2],
      "no-useless-call": [2],
      "no-useless-catch": [2],
      "no-useless-computed-key": [2],
      "no-useless-concat": [2],
      "no-useless-constructor": [2],
      "no-useless-escape": [2],
      "no-useless-rename": [2],
      "no-useless-return": [0],
      "no-var": [2],
      "no-void": [2],
      "no-warning-comments": [0],
      "no-with": [0],
      "object-shorthand": [2, "always"],
      "one-var": [0],
      "operator-assignment": [2, "always"],
      "prefer-arrow-callback": [2, {"allowNamedFunctions": true, "allowUnboundThis": true}],
      "prefer-const": [2, {"destructuring": "all", "ignoreReadBeforeAssign": true}],
      "prefer-destructuring": [0],
      "prefer-exponentiation-operator": [2],
      "prefer-named-capture-group": [0],
      "prefer-numeric-literals": [2],
      "prefer-object-has-own": [2],
      "prefer-object-spread": [2],
      "prefer-promise-reject-errors": [2, {"allowEmptyReject": false}],
      "prefer-regex-literals": [2, {disallowRedundantWrapping: true}],
      "prefer-rest-params": [2],
      "prefer-spread": [2],
      "prefer-template": [2],
      "radix": [2, "as-needed"],
      "react-hooks/component-hook-factories": [0], // rule too broad, factories can be used well without issue
      "react-hooks/config": [0],
      "react-hooks/error-boundaries": [2],
      "react-hooks/exhaustive-deps": [2],
      "react-hooks/gating": [0],
      "react-hooks/globals": [2],
      "react-hooks/immutability": [2],
      "react-hooks/incompatible-library": [2],
      "react-hooks/preserve-manual-memoization": [2],
      "react-hooks/purity": [2],
      "react-hooks/refs": [2],
      "react-hooks/rules-of-hooks": [2],
      "react-hooks/set-state-in-effect": [2],
      "react-hooks/set-state-in-render": [2],
      "react-hooks/static-components": [2],
      "react-hooks/unsupported-syntax": [2],
      "react-hooks/use-memo": [2],
      "react-refresh/only-export-components": [2, {allowConstantExport: true}],
      "regexp/confusing-quantifier": [2],
      "regexp/control-character-escape": [2],
      "regexp/hexadecimal-escape": [0],
      "regexp/letter-case": [0],
      "regexp/match-any": [0],
      "regexp/negation": [2],
      "regexp/no-contradiction-with-assertion": [0],
      "regexp/no-control-character": [0],
      "regexp/no-dupe-characters-character-class": [2],
      "regexp/no-dupe-disjunctions": [2],
      "regexp/no-empty-alternative": [2],
      "regexp/no-empty-capturing-group": [2],
      "regexp/no-empty-character-class": [0],
      "regexp/no-empty-group": [2],
      "regexp/no-empty-lookarounds-assertion": [2],
      "regexp/no-empty-string-literal": [2],
      "regexp/no-escape-backspace": [2],
      "regexp/no-extra-lookaround-assertions": [0],
      "regexp/no-invalid-regexp": [2],
      "regexp/no-invisible-character": [2],
      "regexp/no-lazy-ends": [2],
      "regexp/no-legacy-features": [2],
      "regexp/no-misleading-capturing-group": [0],
      "regexp/no-misleading-unicode-character": [0],
      "regexp/no-missing-g-flag": [2],
      "regexp/no-non-standard-flag": [2],
      "regexp/no-obscure-range": [2],
      "regexp/no-octal": [2],
      "regexp/no-optional-assertion": [2],
      "regexp/no-potentially-useless-backreference": [2],
      "regexp/no-standalone-backslash": [2],
      "regexp/no-super-linear-backtracking": [0],
      "regexp/no-super-linear-move": [0],
      "regexp/no-trivially-nested-assertion": [2],
      "regexp/no-trivially-nested-quantifier": [2],
      "regexp/no-unused-capturing-group": [0],
      "regexp/no-useless-assertions": [2],
      "regexp/no-useless-backreference": [2],
      "regexp/no-useless-character-class": [0],
      "regexp/no-useless-dollar-replacements": [2],
      "regexp/no-useless-escape": [2],
      "regexp/no-useless-flag": [2],
      "regexp/no-useless-lazy": [2],
      "regexp/no-useless-non-capturing-group": [2],
      "regexp/no-useless-quantifier": [2],
      "regexp/no-useless-range": [2],
      "regexp/no-useless-set-operand": [2],
      "regexp/no-useless-string-literal": [2],
      "regexp/no-useless-two-nums-quantifier": [2],
      "regexp/no-zero-quantifier": [2],
      "regexp/optimal-lookaround-quantifier": [2],
      "regexp/optimal-quantifier-concatenation": [0],
      "regexp/prefer-character-class": [0],
      "regexp/prefer-d": [0],
      "regexp/prefer-escape-replacement-dollar-char": [0],
      "regexp/prefer-lookaround": [0],
      "regexp/prefer-named-backreference": [0],
      "regexp/prefer-named-capture-group": [0],
      "regexp/prefer-named-replacement": [0],
      "regexp/prefer-plus-quantifier": [2],
      "regexp/prefer-predefined-assertion": [2],
      "regexp/prefer-quantifier": [0],
      "regexp/prefer-question-quantifier": [2],
      "regexp/prefer-range": [2],
      "regexp/prefer-regexp-exec": [2],
      "regexp/prefer-regexp-test": [2],
      "regexp/prefer-result-array-groups": [0],
      "regexp/prefer-set-operation": [2],
      "regexp/prefer-star-quantifier": [2],
      "regexp/prefer-unicode-codepoint-escapes": [2],
      "regexp/prefer-w": [0],
      "regexp/require-unicode-regexp": [0],
      "regexp/simplify-set-operations": [2],
      "regexp/sort-alternatives": [0],
      "regexp/sort-character-class-elements": [0],
      "regexp/sort-flags": [0],
      "regexp/strict": [0],
      "regexp/unicode-escape": [0],
      "regexp/unicode-property": [0],
      "regexp/use-ignore-case": [0],
      "require-atomic-updates": [0],
      "require-await": [0],
      "require-unicode-regexp": [0],
      "require-yield": [2],
      "sonarjs/cognitive-complexity": [0],
      "sonarjs/elseif-without-else": [0],
      "sonarjs/max-switch-cases": [0],
      "sonarjs/no-all-duplicated-branches": [2],
      "sonarjs/no-collapsible-if": [0],
      "sonarjs/no-collection-size-mischeck": [2],
      "sonarjs/no-duplicate-string": [0],
      "sonarjs/no-duplicated-branches": [0],
      "sonarjs/no-element-overwrite": [2],
      "sonarjs/no-empty-collection": [2],
      "sonarjs/no-extra-arguments": [2],
      "sonarjs/no-gratuitous-expressions": [2],
      "sonarjs/no-identical-conditions": [2],
      "sonarjs/no-identical-expressions": [2],
      "sonarjs/no-identical-functions": [0], // has bugs with identical react hooks in different components
      "sonarjs/no-ignored-return": [2],
      "sonarjs/no-inverted-boolean-check": [2],
      "sonarjs/no-nested-switch": [0],
      "sonarjs/no-nested-template-literals": [0],
      "sonarjs/no-redundant-boolean": [2],
      "sonarjs/no-redundant-jump": [0],
      "sonarjs/no-same-line-conditional": [2],
      "sonarjs/no-small-switch": [0],
      "sonarjs/no-unused-collection": [2],
      "sonarjs/no-use-of-empty-return-value": [2],
      "sonarjs/no-useless-catch": [2],
      "sonarjs/non-existent-operator": [2],
      "sonarjs/prefer-immediate-return": [0],
      "sonarjs/prefer-object-literal": [0],
      "sonarjs/prefer-single-boolean-return": [0],
      "sonarjs/prefer-while": [2],
      "sort-imports": [0],
      "sort-keys": [0],
      "sort-vars": [0],
      "strict": [0],
      "symbol-description": [2],
      "unicode-bom": [2, "never"],
      "unicorn/better-regex": [0],
      "unicorn/catch-error-name": [0],
      "unicorn/consistent-assert": [0],
      "unicorn/consistent-date-clone": [2],
      "unicorn/consistent-destructuring": [2],
      "unicorn/consistent-empty-array-spread": [2],
      "unicorn/consistent-existence-index-check": [0],
      "unicorn/consistent-function-scoping": [2],
      "unicorn/custom-error-definition": [0],
      "unicorn/empty-brace-spaces": [2],
      "unicorn/error-message": [0],
      "unicorn/escape-case": [0],
      "unicorn/expiring-todo-comments": [0],
      "unicorn/explicit-length-check": [0],
      "unicorn/filename-case": [0],
      "unicorn/import-index": [0],
      "unicorn/import-style": [0],
      "unicorn/new-for-builtins": [2],
      "unicorn/no-abusive-eslint-disable": [0],
      "unicorn/no-accessor-recursion": [2],
      "unicorn/no-anonymous-default-export": [0],
      "unicorn/no-array-callback-reference": [0],
      "unicorn/no-array-for-each": [2],
      "unicorn/no-array-method-this-argument": [2],
      "unicorn/no-array-push-push": [2],
      "unicorn/no-array-reduce": [0],
      "unicorn/no-array-reverse": [0],
      "unicorn/no-array-sort": [0],
      "unicorn/no-await-expression-member": [0],
      "unicorn/no-await-in-promise-methods": [2],
      "unicorn/no-console-spaces": [0],
      "unicorn/no-document-cookie": [2],
      "unicorn/no-empty-file": [0],
      "unicorn/no-for-loop": [0],
      "unicorn/no-hex-escape": [0],
      "unicorn/no-instanceof-array": [0],
      "unicorn/no-instanceof-builtins": [2],
      "unicorn/no-invalid-fetch-options": [2],
      "unicorn/no-invalid-remove-event-listener": [2],
      "unicorn/no-keyword-prefix": [0],
      "unicorn/no-length-as-slice-end": [2],
      "unicorn/no-lonely-if": [2],
      "unicorn/no-magic-array-flat-depth": [0],
      "unicorn/no-named-default": [2],
      "unicorn/no-negated-condition": [0],
      "unicorn/no-negation-in-equality-check": [2],
      "unicorn/no-nested-ternary": [0],
      "unicorn/no-new-array": [0],
      "unicorn/no-new-buffer": [0],
      "unicorn/no-null": [0],
      "unicorn/no-object-as-default-parameter": [0],
      "unicorn/no-process-exit": [0],
      "unicorn/no-single-promise-in-promise-methods": [2],
      "unicorn/no-static-only-class": [2],
      "unicorn/no-thenable": [0],
      "unicorn/no-this-assignment": [2],
      "unicorn/no-typeof-undefined": [2],
      "unicorn/no-unnecessary-array-flat-depth": [2],
      "unicorn/no-unnecessary-array-splice-count": [2],
      "unicorn/no-unnecessary-await": [2],
      "unicorn/no-unnecessary-polyfills": [2],
      "unicorn/no-unreadable-array-destructuring": [0],
      "unicorn/no-unreadable-iife": [2],
      "unicorn/no-unused-properties": [2],
      "unicorn/no-useless-error-capture-stack-trace": [2],
      "unicorn/no-useless-fallback-in-spread": [2],
      "unicorn/no-useless-length-check": [2],
      "unicorn/no-useless-promise-resolve-reject": [2],
      "unicorn/no-useless-spread": [2],
      "unicorn/no-useless-switch-case": [2],
      "unicorn/no-useless-undefined": [0],
      "unicorn/no-zero-fractions": [2],
      "unicorn/number-literal-case": [0],
      "unicorn/numeric-separators-style": [0],
      "unicorn/prefer-add-event-listener": [2],
      "unicorn/prefer-array-find": [2],
      "unicorn/prefer-array-flat": [2],
      "unicorn/prefer-array-flat-map": [2],
      "unicorn/prefer-array-index-of": [2],
      "unicorn/prefer-array-some": [2],
      "unicorn/prefer-at": [0],
      "unicorn/prefer-bigint-literals": [2],
      "unicorn/prefer-blob-reading-methods": [2],
      "unicorn/prefer-class-fields": [2],
      "unicorn/prefer-classlist-toggle": [2],
      "unicorn/prefer-code-point": [0],
      "unicorn/prefer-date-now": [2],
      "unicorn/prefer-default-parameters": [0],
      "unicorn/prefer-dom-node-append": [2],
      "unicorn/prefer-dom-node-dataset": [0],
      "unicorn/prefer-dom-node-remove": [2],
      "unicorn/prefer-dom-node-text-content": [2],
      "unicorn/prefer-event-target": [2],
      "unicorn/prefer-export-from": [0],
      "unicorn/prefer-global-this": [0],
      "unicorn/prefer-import-meta-properties": [2],
      "unicorn/prefer-includes": [2],
      "unicorn/prefer-json-parse-buffer": [0],
      "unicorn/prefer-keyboard-event-key": [2],
      "unicorn/prefer-logical-operator-over-ternary": [2],
      "unicorn/prefer-math-min-max": [2],
      "unicorn/prefer-math-trunc": [2],
      "unicorn/prefer-modern-dom-apis": [0],
      "unicorn/prefer-modern-math-apis": [2],
      "unicorn/prefer-module": [0],
      "unicorn/prefer-native-coercion-functions": [2],
      "unicorn/prefer-negative-index": [2],
      "unicorn/prefer-node-protocol": [2],
      "unicorn/prefer-number-properties": [0],
      "unicorn/prefer-object-from-entries": [2],
      "unicorn/prefer-object-has-own": [0],
      "unicorn/prefer-optional-catch-binding": [2],
      "unicorn/prefer-prototype-methods": [2],
      "unicorn/prefer-query-selector": [0],
      "unicorn/prefer-reflect-apply": [0],
      "unicorn/prefer-regexp-test": [2],
      "unicorn/prefer-set-has": [0],
      "unicorn/prefer-set-size": [2],
      "unicorn/prefer-spread": [0],
      "unicorn/prefer-string-raw": [0],
      "unicorn/prefer-string-replace-all": [0],
      "unicorn/prefer-string-slice": [0],
      "unicorn/prefer-string-starts-ends-with": [2],
      "unicorn/prefer-string-trim-start-end": [2],
      "unicorn/prefer-structured-clone": [2],
      "unicorn/prefer-switch": [0],
      "unicorn/prefer-ternary": [0],
      "unicorn/prefer-top-level-await": [0],
      "unicorn/prefer-type-error": [0],
      "unicorn/prevent-abbreviations": [0],
      "unicorn/relative-url-style": [2],
      "unicorn/require-array-join-separator": [2],
      "unicorn/require-module-attributes": [2],
      "unicorn/require-module-specifiers": [0],
      "unicorn/require-number-to-fixed-digits-argument": [2],
      "unicorn/require-post-message-target-origin": [0],
      "unicorn/string-content": [0],
      "unicorn/switch-case-braces": [0],
      "unicorn/template-indent": [2],
      "unicorn/text-encoding-identifier-case": [0],
      "unicorn/throw-new-error": [2],
      "use-isnan": [2],
      "valid-typeof": [2, {"requireStringLiterals": true}],
      "vars-on-top": [0],
      "yoda": [2, "never"],
    }
  },
  {
    files: ["**/*.d.ts"],
    rules: {
      "@typescript-eslint/consistent-type-definitions": [0],
      "@typescript-eslint/consistent-type-imports": [0],
      "@typescript-eslint/no-unused-vars": [0],
      "no-undef": [0],
      "no-var": [0],
    }
  },
  {
    files: ["**/*.worker.*"],
    languageOptions: {
      globals: globals.worker,
    },
    rules: {
      "no-restricted-globals": [2, "window"],
    },
  },
  {
    // @ts-expect-error - https://github.com/vitest-dev/eslint-plugin-vitest/issues/737
    plugins: {vitest},
    files: [
      "**/*.test.*",
      "vitest.setup.*",
      "integration/**",
    ],
    languageOptions: {globals: globals.vitest},
    rules: {
      "unicorn/consistent-function-scoping": [0],
      "vitest/consistent-test-filename": [0],
      "vitest/consistent-test-it": [0],
      "vitest/expect-expect": [0],
      "vitest/max-expects": [0],
      "vitest/max-nested-describe": [0],
      "vitest/no-alias-methods": [0],
      "vitest/no-commented-out-tests": [0],
      "vitest/no-conditional-expect": [0],
      "vitest/no-conditional-in-test": [0],
      "vitest/no-conditional-tests": [0],
      "vitest/no-disabled-tests": [0],
      "vitest/no-done-callback": [0],
      "vitest/no-duplicate-hooks": [0],
      "vitest/no-focused-tests": [2],
      "vitest/no-hooks": [0],
      "vitest/no-identical-title": [2],
      "vitest/no-interpolation-in-snapshots": [0],
      "vitest/no-large-snapshots": [0],
      "vitest/no-mocks-import": [0],
      "vitest/no-restricted-matchers": [0],
      "vitest/no-restricted-vi-methods": [0],
      "vitest/no-standalone-expect": [0],
      "vitest/no-test-prefixes": [0],
      "vitest/no-test-return-statement": [0],
      "vitest/prefer-called-with": [0],
      "vitest/prefer-comparison-matcher": [0],
      "vitest/prefer-each": [0],
      "vitest/prefer-equality-matcher": [0],
      "vitest/prefer-expect-resolves": [0],
      "vitest/prefer-hooks-in-order": [0],
      "vitest/prefer-hooks-on-top": [2],
      "vitest/prefer-lowercase-title": [0],
      "vitest/prefer-mock-promise-shorthand": [0],
      "vitest/prefer-snapshot-hint": [0],
      "vitest/prefer-spy-on": [0],
      "vitest/prefer-strict-equal": [0],
      "vitest/prefer-to-be": [0],
      "vitest/prefer-to-be-falsy": [0],
      "vitest/prefer-to-be-object": [0],
      "vitest/prefer-to-be-truthy": [0],
      "vitest/prefer-to-contain": [0],
      "vitest/prefer-to-have-length": [0],
      "vitest/prefer-todo": [0],
      "vitest/require-hook": [0],
      "vitest/require-to-throw-message": [0],
      "vitest/require-top-level-describe": [0],
      "vitest/valid-describe-callback": [2],
      "vitest/valid-expect": [2],
      "vitest/valid-title": [2],
    },
  },
  {
    files: [
      "**/*.config.*",
      "**/*.stories.*",
      "**/.storybook/**",
      "**/*.d.ts",
      "vitest.setup.*",
      "vitest.global.*",
    ],
    rules: {
      "import-x/no-unused-modules": [0],
    },
  },
  {
    ...playwright.configs["flat/recommended"],
    files: ["tests/**"],
    rules: {
      "playwright/expect-expect": [0],
      "playwright/no-networkidle": [0],
    },
  },
  // wait for v10
  // {
  //   files: ["**/*.stories.*"],
  //   plugins: {storybook},
  //   rules: {
  //     "storybook/await-interactions": [2],
  //     "storybook/context-in-play-function": [2],
  //     "storybook/default-exports": [2],
  //     "storybook/hierarchy-separator": [2],
  //     "storybook/no-redundant-story-name": [2],
  //     "storybook/prefer-pascal-case": [2],
  //     "storybook/story-exports": [2],
  //     "storybook/use-storybook-expect": [2],
  //     "storybook/use-storybook-testing-library": [2],
  //     "sonarjs/no-identical-functions": [0],
  //   },
  // },
  {
    plugins: {
      "jsx-a11y": jsxA11y,
      "validate-jsx-nesting": validateJsxNesting,
    },
    files: [`**/*.{${jsxExts.join(",")}}`],
    rules: {
      "@eslint-react/jsx-key-before-spread": [2],
      "@eslint-react/jsx-no-comment-textnodes": [2],
      "@eslint-react/jsx-no-duplicate-props": [2],
      "@eslint-react/jsx-no-iife": [0],
      "@eslint-react/jsx-no-undef": [2],
      "@eslint-react/jsx-shorthand-boolean": [2, -1],
      "@eslint-react/jsx-shorthand-fragment": [2, -1],
      "@eslint-react/jsx-uses-react": [0],
      "@eslint-react/jsx-uses-vars": [2],
      "jsx-a11y/accessible-emoji": [0],
      "jsx-a11y/alt-text": [0],
      "jsx-a11y/anchor-ambiguous-text": [2],
      "jsx-a11y/anchor-has-content": [2],
      "jsx-a11y/anchor-is-valid": [0],
      "jsx-a11y/aria-activedescendant-has-tabindex": [2],
      "jsx-a11y/aria-props": [2],
      "jsx-a11y/aria-proptypes": [2],
      "jsx-a11y/aria-role": [2],
      "jsx-a11y/aria-unsupported-elements": [2],
      "jsx-a11y/autocomplete-valid": [2],
      "jsx-a11y/click-events-have-key-events": [0],
      "jsx-a11y/control-has-associated-label": [0],
      "jsx-a11y/heading-has-content": [2],
      "jsx-a11y/html-has-lang": [0],
      "jsx-a11y/iframe-has-title": [0],
      "jsx-a11y/img-redundant-alt": [0],
      "jsx-a11y/interactive-supports-focus": [0],
      "jsx-a11y/label-has-associated-control": [2],
      "jsx-a11y/label-has-for": [0],
      "jsx-a11y/lang": [2],
      "jsx-a11y/media-has-caption": [0],
      "jsx-a11y/mouse-events-have-key-events": [0],
      "jsx-a11y/no-access-key": [2],
      "jsx-a11y/no-aria-hidden-on-focusable": [0],
      "jsx-a11y/no-autofocus": [0],
      "jsx-a11y/no-distracting-elements": [2],
      "jsx-a11y/no-interactive-element-to-noninteractive-role": [0],
      "jsx-a11y/no-noninteractive-element-interactions": [0],
      "jsx-a11y/no-noninteractive-element-to-interactive-role": [0],
      "jsx-a11y/no-noninteractive-tabindex": [0],
      "jsx-a11y/no-onchange": [0],
      "jsx-a11y/no-redundant-roles": [2],
      "jsx-a11y/no-static-element-interactions": [0],
      "jsx-a11y/prefer-tag-over-role": [0],
      "jsx-a11y/role-has-required-aria-props": [2],
      "jsx-a11y/role-supports-aria-props": [2],
      "jsx-a11y/scope": [0],
      "jsx-a11y/tabindex-no-positive": [2],
      "validate-jsx-nesting/no-invalid-jsx-nesting": [2],
    }
  },
  {
    files: ["openapi.d.ts"], // file generated by openapi-typescript
    rules: {
      "@typescript-eslint/no-redundant-type-constituents": [0],
    }
  },
]);
